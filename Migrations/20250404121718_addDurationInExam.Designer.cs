// <auto-generated />
using System;
using EduquizSuper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduquizSuper.Migrations
{
    [DbContext(typeof(EduquizContextDb))]
    [Migration("20250404121718_addDurationInExam")]
    partial class addDurationInExam
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduquizSuper.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EduquizSuper.Models.Exam", b =>
                {
                    b.Property<string>("ExamId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EasyQuestions")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HardQuestions")
                        .HasColumnType("int");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MediumQuestions")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("int");

                    b.Property<double>("ScorePerQuestion")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TotalScore")
                        .HasColumnType("float");

                    b.HasKey("ExamId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("EduquizSuper.Models.ExamDetail", b =>
                {
                    b.Property<string>("ExamId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(0);

                    b.Property<string>("QuestionId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.HasKey("ExamId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamDetails");

                    b.HasData(
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q001",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q002",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q003",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q004",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q005",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q006",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q007",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q008",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q009",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q010",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q011",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q012",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q013",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q014",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q015",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q016",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q017",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q018",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q019",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q020",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q021",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q022",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q023",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q024",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q025",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q026",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q027",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q028",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q029",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q030",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q031",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q032",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q033",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q034",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q035",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q036",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q037",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q038",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q039",
                            IsCorrect = false
                        },
                        new
                        {
                            ExamId = "EXAM001",
                            QuestionId = "Q040",
                            IsCorrect = false
                        });
                });

            modelBuilder.Entity("EduquizSuper.Models.ExamResult", b =>
                {
                    b.Property<string>("ExamId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(0);

                    b.Property<string>("UserId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAnswersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("EduquizSuper.Models.Question", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AnswersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("QuestionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = "Q001",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"3\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"4\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"5\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"6\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 2 + 2?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q002",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"2\",\"isCorrect\":true},{\"id\":\"2\",\"content\":\"3\",\"isCorrect\":false},{\"id\":\"3\",\"content\":\"8\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"1\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 5 - 3?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q003",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"8\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"10\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"12\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 4 × 2?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q004",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"4\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"5\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"2\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 10 ÷ 2?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q005",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"11\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"12\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"13\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"10\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 7 + 5?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q006",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"5\",\"isCorrect\":true},{\"id\":\"2\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"3\",\"content\":\"4\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"3\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 9 - 4?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q007",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"9\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"12\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"15\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 3 × 3?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q008",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"3\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"4\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"5\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"6\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 12 ÷ 3?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q009",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"12\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"14\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"16\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"18\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 6 + 8?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q010",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"8\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"9\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"7\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 15 - 7?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q011",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"8\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"10\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"12\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"15\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 2 × 5?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q012",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"4\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"5\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"7\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 20 ÷ 4?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q013",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"8\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"10\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"11\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"12\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 1 + 9?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q014",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"5\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"6\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"7\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"4\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 8 - 2?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q015",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"8\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"10\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"12\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"15\",\"isCorrect\":false}]",
                            Difficulty = "Easy",
                            QuestionContent = "What is 5 × 2?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q016",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"40\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"45\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"50\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"55\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 15 × 3?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q017",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"5\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"6\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"7\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"8\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 36 ÷ 6?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q018",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"28\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"30\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"32\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"34\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 12 + 18?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q019",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"25\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"27\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"29\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"31\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 50 - 23?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q020",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"54\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"56\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"58\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"60\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 7 × 8?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q021",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"4\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"5\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"6\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"7\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 45 ÷ 9?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q022",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"43\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"45\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"47\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"49\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 19 + 26?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q023",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"32\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"34\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"36\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"38\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 72 - 38?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q024",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"52\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"54\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"56\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"58\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 9 × 6?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q025",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"14\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"16\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"18\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"20\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 80 ÷ 5?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q026",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"40\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"42\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"44\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"46\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 13 + 29?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q027",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"43\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"45\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"47\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"49\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 64 - 19?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q028",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"42\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"44\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"46\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"48\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 11 × 4?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q029",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"13\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"15\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"17\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"19\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 90 ÷ 6?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q030",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"40\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"42\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"44\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"46\",\"isCorrect\":false}]",
                            Difficulty = "Medium",
                            QuestionContent = "What is 25 + 17?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q031",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"211\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"221\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"231\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"241\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 17 × 13?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q032",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"10\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"12\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"14\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"16\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 144 ÷ 12?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q033",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"132\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"134\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"136\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"138\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 56 + 78?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q034",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"34\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"36\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"38\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"40\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 123 - 87?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q035",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"131\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"133\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"135\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"137\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 19 × 7?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q036",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"13\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"15\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"17\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"19\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 225 ÷ 15?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q037",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"154\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"156\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"158\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"160\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 89 + 67?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q038",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"76\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"78\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"80\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"82\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 176 - 98?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q039",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"205\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"207\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"209\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"211\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 23 × 9?",
                            SubjectId = "SUB001"
                        },
                        new
                        {
                            QuestionId = "Q040",
                            AnswersJson = "[{\"id\":\"1\",\"content\":\"23\",\"isCorrect\":false},{\"id\":\"2\",\"content\":\"25\",\"isCorrect\":true},{\"id\":\"3\",\"content\":\"27\",\"isCorrect\":false},{\"id\":\"4\",\"content\":\"29\",\"isCorrect\":false}]",
                            Difficulty = "Hard",
                            QuestionContent = "What is 300 ÷ 12?",
                            SubjectId = "SUB001"
                        });
                });

            modelBuilder.Entity("EduquizSuper.Models.Subject", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EduquizSuper.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EduquizSuper.Models.Exam", b =>
                {
                    b.HasOne("EduquizSuper.Models.User", "Manager")
                        .WithMany("ManagedExams")
                        .HasForeignKey("ManagerId");

                    b.HasOne("EduquizSuper.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduquizSuper.Models.ExamDetail", b =>
                {
                    b.HasOne("EduquizSuper.Models.Exam", "Exam")
                        .WithMany("ExamDetails")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduquizSuper.Models.Question", "Question")
                        .WithMany("ExamDetails")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EduquizSuper.Models.ExamResult", b =>
                {
                    b.HasOne("EduquizSuper.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EduquizSuper.Models.User", "User")
                        .WithMany("ExamResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduquizSuper.Models.Question", b =>
                {
                    b.HasOne("EduquizSuper.Models.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduquizSuper.Models.Subject", b =>
                {
                    b.HasOne("EduquizSuper.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduquizSuper.Models.User", b =>
                {
                    b.HasOne("EduquizSuper.Models.Course", "Course")
                        .WithMany("Users")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EduquizSuper.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EduquizSuper.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduquizSuper.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EduquizSuper.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EduquizSuper.Models.Course", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EduquizSuper.Models.Exam", b =>
                {
                    b.Navigation("ExamDetails");
                });

            modelBuilder.Entity("EduquizSuper.Models.Question", b =>
                {
                    b.Navigation("ExamDetails");
                });

            modelBuilder.Entity("EduquizSuper.Models.Subject", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("EduquizSuper.Models.User", b =>
                {
                    b.Navigation("ExamResults");

                    b.Navigation("ManagedExams");
                });
#pragma warning restore 612, 618
        }
    }
}
